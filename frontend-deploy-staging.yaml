apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    meta.helm.sh/release-name: amundsen
    meta.helm.sh/release-namespace: amundsen
  generation: 12
  labels:
    app: amundsen
    app.kubernetes.io/managed-by: Helm
    chart: amundsen-2.1.2
    component: frontend
    heritage: Helm
    release: amundsen
  name: amundsen-frontend
  namespace: amundsen
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: amundsen
      component: frontend
      release: amundsen
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: amundsen
        component: frontend
        release: amundsen
    spec:
      containers:
      - args:
        - -w
        - "4"
        - --bind
        - :5000
        - amundsen_application.wsgi
        command:
        - gunicorn
        envFrom:
        - configMapRef:
            name: amundsen-frontend
        image:  785155980822.dkr.ecr.us-west-2.amazonaws.com/amundsen-frontend-staging:latest # amundsendev/amundsen-frontend #
        imagePullPolicy: Always
        livenessProbe:
          failureThreshold: 5
          httpGet:
            path: /healthcheck
            port: 5000
            scheme: HTTP
          initialDelaySeconds: 10
          periodSeconds: 60
          successThreshold: 1
          timeoutSeconds: 1
        name: amundsen-frontend
        ports:
        - containerPort: 5000
          protocol: TCP
        readinessProbe:
          failureThreshold: 5
          httpGet:
            path: /healthcheck
            port: 5000
            scheme: HTTP
          initialDelaySeconds: 10
          periodSeconds: 60
          successThreshold: 1
          timeoutSeconds: 1
        resources: {}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
